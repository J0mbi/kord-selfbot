public final class dev/jombi/kordsb/gateway/ApplicationCommandCreate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/ApplicationCommandCreate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/ApplicationCommandCreate;Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/ApplicationCommandCreate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplication ()Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/ApplicationCommandDelete : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/ApplicationCommandDelete;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/ApplicationCommandDelete;Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/ApplicationCommandDelete;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplication ()Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/ApplicationCommandPermissionsUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordGuildApplicationCommandPermissions;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordGuildApplicationCommandPermissions;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordGuildApplicationCommandPermissions;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/ApplicationCommandPermissionsUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/ApplicationCommandPermissionsUpdate;Ldev/jombi/kordsb/common/entity/DiscordGuildApplicationCommandPermissions;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/ApplicationCommandPermissionsUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPermissions ()Ldev/jombi/kordsb/common/entity/DiscordGuildApplicationCommandPermissions;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/ApplicationCommandUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/ApplicationCommandUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/ApplicationCommandUpdate;Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/ApplicationCommandUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplication ()Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/ChannelCreate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordChannel;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/ChannelCreate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/ChannelCreate;Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/ChannelCreate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannel ()Ldev/jombi/kordsb/common/entity/DiscordChannel;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/ChannelDelete : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordChannel;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/ChannelDelete;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/ChannelDelete;Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/ChannelDelete;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannel ()Ldev/jombi/kordsb/common/entity/DiscordChannel;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/ChannelPinsUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordPinsUpdateData;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordPinsUpdateData;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordPinsUpdateData;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/ChannelPinsUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/ChannelPinsUpdate;Ldev/jombi/kordsb/common/entity/DiscordPinsUpdateData;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/ChannelPinsUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPins ()Ldev/jombi/kordsb/common/entity/DiscordPinsUpdateData;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/ChannelUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordChannel;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/ChannelUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/ChannelUpdate;Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/ChannelUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannel ()Ldev/jombi/kordsb/common/entity/DiscordChannel;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class dev/jombi/kordsb/gateway/Close : dev/jombi/kordsb/gateway/Event {
}

public final class dev/jombi/kordsb/gateway/Close$Detach : dev/jombi/kordsb/gateway/Close {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Close$Detach;
}

public final class dev/jombi/kordsb/gateway/Close$DiscordClose : dev/jombi/kordsb/gateway/Close {
	public fun <init> (Ldev/jombi/kordsb/gateway/GatewayCloseCode;Z)V
	public final fun component1 ()Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public final fun component2 ()Z
	public final fun copy (Ldev/jombi/kordsb/gateway/GatewayCloseCode;Z)Ldev/jombi/kordsb/gateway/Close$DiscordClose;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/Close$DiscordClose;Ldev/jombi/kordsb/gateway/GatewayCloseCode;ZILjava/lang/Object;)Ldev/jombi/kordsb/gateway/Close$DiscordClose;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCloseCode ()Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public final fun getRecoverable ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/Close$Reconnecting : dev/jombi/kordsb/gateway/Close {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Close$Reconnecting;
}

public final class dev/jombi/kordsb/gateway/Close$RetryLimitReached : dev/jombi/kordsb/gateway/Close {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Close$RetryLimitReached;
}

public final class dev/jombi/kordsb/gateway/Close$SessionReset : dev/jombi/kordsb/gateway/Close {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Close$SessionReset;
}

public final class dev/jombi/kordsb/gateway/Close$Timeout : dev/jombi/kordsb/gateway/Close {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Close$Timeout;
}

public final class dev/jombi/kordsb/gateway/Close$UserClose : dev/jombi/kordsb/gateway/Close {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Close$UserClose;
}

public final class dev/jombi/kordsb/gateway/Close$ZombieConnection : dev/jombi/kordsb/gateway/Close {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Close$ZombieConnection;
}

public abstract class dev/jombi/kordsb/gateway/Command {
}

public final class dev/jombi/kordsb/gateway/Command$SerializationStrategy : kotlinx/serialization/SerializationStrategy {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Command$SerializationStrategy;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/Command;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class dev/jombi/kordsb/gateway/DefaultGateway : dev/jombi/kordsb/gateway/Gateway {
	public static final field Companion Ldev/jombi/kordsb/gateway/DefaultGateway$Companion;
	public fun <init> (Ldev/jombi/kordsb/gateway/DefaultGatewayData;)V
	public fun detach (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getEvents ()Lkotlinx/coroutines/flow/SharedFlow;
	public fun getPing ()Lkotlinx/coroutines/flow/StateFlow;
	public fun send (Ldev/jombi/kordsb/gateway/Command;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun start (Ldev/jombi/kordsb/gateway/GatewayConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun stop (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/gateway/DefaultGateway$Companion {
}

public final class dev/jombi/kordsb/gateway/DefaultGatewayBuilder {
	public fun <init> ()V
	public final fun build ()Ldev/jombi/kordsb/gateway/DefaultGateway;
	public final fun getClient ()Lio/ktor/client/HttpClient;
	public final fun getDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getEventFlow ()Lkotlinx/coroutines/flow/MutableSharedFlow;
	public final fun getIdentifyRateLimiter ()Ldev/jombi/kordsb/common/ratelimit/RateLimiter;
	public final fun getReconnectRetry ()Ldev/jombi/kordsb/gateway/retry/Retry;
	public final fun getSendRateLimiter ()Ldev/jombi/kordsb/common/ratelimit/RateLimiter;
	public final fun getUrl ()Ljava/lang/String;
	public final fun setClient (Lio/ktor/client/HttpClient;)V
	public final fun setDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)V
	public final fun setEventFlow (Lkotlinx/coroutines/flow/MutableSharedFlow;)V
	public final fun setIdentifyRateLimiter (Ldev/jombi/kordsb/common/ratelimit/RateLimiter;)V
	public final fun setReconnectRetry (Ldev/jombi/kordsb/gateway/retry/Retry;)V
	public final fun setSendRateLimiter (Ldev/jombi/kordsb/common/ratelimit/RateLimiter;)V
	public final fun setUrl (Ljava/lang/String;)V
}

public final class dev/jombi/kordsb/gateway/DefaultGatewayData {
	public fun <init> (Ljava/lang/String;Lio/ktor/client/HttpClient;Ldev/jombi/kordsb/gateway/retry/Retry;Ldev/jombi/kordsb/common/ratelimit/RateLimiter;Ldev/jombi/kordsb/common/ratelimit/RateLimiter;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/flow/MutableSharedFlow;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lio/ktor/client/HttpClient;
	public final fun component3 ()Ldev/jombi/kordsb/gateway/retry/Retry;
	public final fun component4 ()Ldev/jombi/kordsb/common/ratelimit/RateLimiter;
	public final fun component5 ()Ldev/jombi/kordsb/common/ratelimit/RateLimiter;
	public final fun component6 ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun component7 ()Lkotlinx/coroutines/flow/MutableSharedFlow;
	public final fun copy (Ljava/lang/String;Lio/ktor/client/HttpClient;Ldev/jombi/kordsb/gateway/retry/Retry;Ldev/jombi/kordsb/common/ratelimit/RateLimiter;Ldev/jombi/kordsb/common/ratelimit/RateLimiter;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/flow/MutableSharedFlow;)Ldev/jombi/kordsb/gateway/DefaultGatewayData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/DefaultGatewayData;Ljava/lang/String;Lio/ktor/client/HttpClient;Ldev/jombi/kordsb/gateway/retry/Retry;Ldev/jombi/kordsb/common/ratelimit/RateLimiter;Ldev/jombi/kordsb/common/ratelimit/RateLimiter;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/flow/MutableSharedFlow;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/DefaultGatewayData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClient ()Lio/ktor/client/HttpClient;
	public final fun getDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getEventFlow ()Lkotlinx/coroutines/flow/MutableSharedFlow;
	public final fun getIdentifyRateLimiter ()Ldev/jombi/kordsb/common/ratelimit/RateLimiter;
	public final fun getReconnectRetry ()Ldev/jombi/kordsb/gateway/retry/Retry;
	public final fun getSendRateLimiter ()Ldev/jombi/kordsb/common/ratelimit/RateLimiter;
	public final fun getUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/DefaultGatewayKt {
	public static final fun DefaultGateway (Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/gateway/DefaultGateway;
	public static synthetic fun DefaultGateway$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/DefaultGateway;
}

public final class dev/jombi/kordsb/gateway/DiscordCreatedInvite {
	public static final field Companion Ldev/jombi/kordsb/gateway/DiscordCreatedInvite$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlin/time/Duration;ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZILkotlinx/serialization/internal/SerializationConstructorMarker;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;JILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;JILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component11 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component12 ()Z
	public final fun component13 ()I
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lkotlinx/datetime/Instant;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6-UwyO8pc ()J
	public final fun component7 ()I
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy-5ndHN30 (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;JILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZI)Ldev/jombi/kordsb/gateway/DiscordCreatedInvite;
	public static synthetic fun copy-5ndHN30$default (Ldev/jombi/kordsb/gateway/DiscordCreatedInvite;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;JILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZIILjava/lang/Object;)Ldev/jombi/kordsb/gateway/DiscordCreatedInvite;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getCode ()Ljava/lang/String;
	public final fun getCreatedAt ()Lkotlinx/datetime/Instant;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getInviter ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getMaxAge-UwyO8pc ()J
	public final fun getMaxUses ()I
	public final fun getTargetApplication ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getTargetType ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getTargetUser ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getTargetUserType ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getTemporary ()Z
	public final fun getUses ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/DiscordCreatedInvite;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/DiscordCreatedInvite$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/DiscordCreatedInvite$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/DiscordCreatedInvite;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/DiscordCreatedInvite;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/DiscordCreatedInvite$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/DiscordDeletedInvite {
	public static final field Companion Ldev/jombi/kordsb/gateway/DiscordDeletedInvite$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;)Ldev/jombi/kordsb/gateway/DiscordDeletedInvite;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/DiscordDeletedInvite;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/DiscordDeletedInvite;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getCode ()Ljava/lang/String;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/DiscordDeletedInvite;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/DiscordDeletedInvite$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/DiscordDeletedInvite$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/DiscordDeletedInvite;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/DiscordDeletedInvite;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/DiscordDeletedInvite$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/DiscordInviteUser {
	public static final field Companion Ldev/jombi/kordsb/gateway/DiscordInviteUser$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/gateway/DiscordInviteUser;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/DiscordInviteUser;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/DiscordInviteUser;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAvatar ()Ljava/lang/String;
	public final fun getBot ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getDiscriminator ()Ljava/lang/String;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getPublicFlags ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getUsername ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/DiscordInviteUser;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/DiscordInviteUser$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/DiscordInviteUser$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/DiscordInviteUser;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/DiscordInviteUser;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/DiscordInviteUser$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/DiscordPresence {
	public static final field Companion Ldev/jombi/kordsb/gateway/DiscordPresence$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/PresenceStatus;ZLkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/DiscordBotActivity;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/PresenceStatus;ZLkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/DiscordBotActivity;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/PresenceStatus;ZLkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/DiscordBotActivity;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/PresenceStatus;
	public final fun component2 ()Z
	public final fun component3 ()Lkotlinx/datetime/Instant;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/DiscordBotActivity;
	public final fun copy (Ldev/jombi/kordsb/common/entity/PresenceStatus;ZLkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/DiscordBotActivity;)Ldev/jombi/kordsb/gateway/DiscordPresence;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/DiscordPresence;Ldev/jombi/kordsb/common/entity/PresenceStatus;ZLkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/DiscordBotActivity;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/DiscordPresence;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAfk ()Z
	public final fun getGame ()Ldev/jombi/kordsb/common/entity/DiscordBotActivity;
	public final fun getSince ()Lkotlinx/datetime/Instant;
	public final fun getStatus ()Ldev/jombi/kordsb/common/entity/PresenceStatus;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/DiscordPresence;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/DiscordPresence$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/DiscordPresence$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/DiscordPresence;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/DiscordPresence;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/DiscordPresence$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/DiscordRemovedEmoji {
	public static final field Companion Ldev/jombi/kordsb/gateway/DiscordRemovedEmoji$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component4 ()Ldev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji;)Ldev/jombi/kordsb/gateway/DiscordRemovedEmoji;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/DiscordRemovedEmoji;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/DiscordRemovedEmoji;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getEmoji ()Ldev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMessageId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/DiscordRemovedEmoji;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/DiscordRemovedEmoji$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/DiscordRemovedEmoji$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/DiscordRemovedEmoji;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/DiscordRemovedEmoji;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/DiscordRemovedEmoji$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji {
	public static final field Companion Ldev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;)Ldev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/DiscordThreadListSync {
	public static final field Companion Ldev/jombi/kordsb/gateway/DiscordThreadListSync$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;)Ldev/jombi/kordsb/gateway/DiscordThreadListSync;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/DiscordThreadListSync;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/DiscordThreadListSync;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelIds ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMembers ()Ljava/util/List;
	public final fun getThreads ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/DiscordThreadListSync;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/DiscordThreadListSync$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/DiscordThreadListSync$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/DiscordThreadListSync;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/DiscordThreadListSync;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/DiscordThreadListSync$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/DiscordThreadMembersUpdate {
	public static final field Companion Ldev/jombi/kordsb/gateway/DiscordThreadMembersUpdate$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()I
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/gateway/DiscordThreadMembersUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/DiscordThreadMembersUpdate;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/DiscordThreadMembersUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAddedMembers ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMemberCount ()I
	public final fun getRemovedMemberIds ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/DiscordThreadMembersUpdate;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/DiscordThreadMembersUpdate$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/DiscordThreadMembersUpdate$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/DiscordThreadMembersUpdate;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/DiscordThreadMembersUpdate;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/DiscordThreadMembersUpdate$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/jombi/kordsb/gateway/DispatchEvent : dev/jombi/kordsb/gateway/Event {
	public abstract fun getSequence ()Ljava/lang/Integer;
}

public abstract class dev/jombi/kordsb/gateway/Event {
}

public final class dev/jombi/kordsb/gateway/Event$DeserializationStrategy : kotlinx/serialization/DeserializationStrategy {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Event$DeserializationStrategy;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/Event;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
}

public abstract interface class dev/jombi/kordsb/gateway/Gateway : kotlinx/coroutines/CoroutineScope {
	public static final field Companion Ldev/jombi/kordsb/gateway/Gateway$Companion;
	public abstract fun detach (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getEvents ()Lkotlinx/coroutines/flow/SharedFlow;
	public abstract fun getPing ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun send (Ldev/jombi/kordsb/gateway/Command;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun start (Ldev/jombi/kordsb/gateway/GatewayConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun stop (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/gateway/Gateway$Companion {
	public final fun none ()Ldev/jombi/kordsb/gateway/Gateway;
}

public final class dev/jombi/kordsb/gateway/GatewayCloseCode : java/lang/Enum {
	public static final field AlreadyAuthenticated Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public static final field AuthenticationFailed Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public static final field DecodeError Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public static final field DisallowedIntents Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public static final field InvalidApiVersion Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public static final field InvalidIntents Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public static final field InvalidSeq Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public static final field InvalidShard Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public static final field NotAuthenticated Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public static final field RateLimited Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public static final field SessionTimeout Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public static final field ShardingRequired Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public static final field Unknown Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public static final field UnknownOpCode Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public final fun getCode ()I
	public static fun valueOf (Ljava/lang/String;)Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public static fun values ()[Ldev/jombi/kordsb/gateway/GatewayCloseCode;
}

public final class dev/jombi/kordsb/gateway/GatewayConfiguration {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;ILdev/jombi/kordsb/gateway/Intents;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;ILdev/jombi/kordsb/gateway/Intents;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component4 ()I
	public final fun component5 ()Ldev/jombi/kordsb/gateway/Intents;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;ILdev/jombi/kordsb/gateway/Intents;)Ldev/jombi/kordsb/gateway/GatewayConfiguration;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GatewayConfiguration;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;ILdev/jombi/kordsb/gateway/Intents;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GatewayConfiguration;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIntents ()Ldev/jombi/kordsb/gateway/Intents;
	public final fun getName ()Ljava/lang/String;
	public final fun getPresence ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getThreshold ()I
	public final fun getToken ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GatewayConfigurationBuilder {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/gateway/DiscordPresence;ILdev/jombi/kordsb/gateway/Intents;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/gateway/DiscordPresence;ILdev/jombi/kordsb/gateway/Intents;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Ldev/jombi/kordsb/gateway/GatewayConfiguration;
	public final fun getIntents ()Ldev/jombi/kordsb/gateway/Intents;
	public final fun getName ()Ljava/lang/String;
	public final fun getPresence ()Ldev/jombi/kordsb/gateway/DiscordPresence;
	public final fun getThreshold ()I
	public final fun getToken ()Ljava/lang/String;
	public final fun presence (Lkotlin/jvm/functions/Function1;)V
	public final fun setIntents (Ldev/jombi/kordsb/gateway/Intents;)V
	public final fun setName (Ljava/lang/String;)V
	public final fun setPresence (Ldev/jombi/kordsb/gateway/DiscordPresence;)V
	public final fun setThreshold (I)V
}

public final class dev/jombi/kordsb/gateway/GatewayKt {
	public static final fun editPresence (Ldev/jombi/kordsb/gateway/Gateway;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun getGatewayOnLogger ()Lmu/KLogger;
	public static final fun requestGuildMembers (Ldev/jombi/kordsb/gateway/Gateway;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
	public static final fun requestGuildMembers (Ldev/jombi/kordsb/gateway/Gateway;Ldev/jombi/kordsb/gateway/RequestGuildMembers;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun requestGuildMembers$default (Ldev/jombi/kordsb/gateway/Gateway;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static final fun start (Ldev/jombi/kordsb/gateway/Gateway;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun start$default (Ldev/jombi/kordsb/gateway/Gateway;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/gateway/GuildBanAdd : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordGuildBan;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordGuildBan;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordGuildBan;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildBanAdd;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildBanAdd;Ldev/jombi/kordsb/common/entity/DiscordGuildBan;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildBanAdd;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBan ()Ldev/jombi/kordsb/common/entity/DiscordGuildBan;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildBanRemove : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordGuildBan;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordGuildBan;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordGuildBan;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildBanRemove;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildBanRemove;Ldev/jombi/kordsb/common/entity/DiscordGuildBan;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildBanRemove;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBan ()Ldev/jombi/kordsb/common/entity/DiscordGuildBan;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildCreate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordGuild;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordGuild;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordGuild;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildCreate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildCreate;Ldev/jombi/kordsb/common/entity/DiscordGuild;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildCreate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuild ()Ldev/jombi/kordsb/common/entity/DiscordGuild;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildDelete : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordUnavailableGuild;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordUnavailableGuild;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordUnavailableGuild;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildDelete;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildDelete;Ldev/jombi/kordsb/common/entity/DiscordUnavailableGuild;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildDelete;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuild ()Ldev/jombi/kordsb/common/entity/DiscordUnavailableGuild;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildEmojisUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordUpdatedEmojis;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordUpdatedEmojis;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordUpdatedEmojis;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildEmojisUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildEmojisUpdate;Ldev/jombi/kordsb/common/entity/DiscordUpdatedEmojis;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildEmojisUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEmoji ()Ldev/jombi/kordsb/common/entity/DiscordUpdatedEmojis;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildIntegrationsUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordGuildIntegrations;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordGuildIntegrations;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordGuildIntegrations;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildIntegrationsUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildIntegrationsUpdate;Ldev/jombi/kordsb/common/entity/DiscordGuildIntegrations;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildIntegrationsUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIntegrations ()Ldev/jombi/kordsb/common/entity/DiscordGuildIntegrations;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildMemberAdd : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordAddedGuildMember;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordAddedGuildMember;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordAddedGuildMember;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildMemberAdd;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildMemberAdd;Ldev/jombi/kordsb/common/entity/DiscordAddedGuildMember;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildMemberAdd;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMember ()Ldev/jombi/kordsb/common/entity/DiscordAddedGuildMember;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildMemberRemove : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordRemovedGuildMember;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordRemovedGuildMember;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordRemovedGuildMember;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildMemberRemove;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildMemberRemove;Ldev/jombi/kordsb/common/entity/DiscordRemovedGuildMember;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildMemberRemove;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMember ()Ldev/jombi/kordsb/common/entity/DiscordRemovedGuildMember;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildMemberUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordUpdatedGuildMember;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordUpdatedGuildMember;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordUpdatedGuildMember;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildMemberUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildMemberUpdate;Ldev/jombi/kordsb/common/entity/DiscordUpdatedGuildMember;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildMemberUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMember ()Ldev/jombi/kordsb/common/entity/DiscordUpdatedGuildMember;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildMembersChunk : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/gateway/GuildMembersChunkData;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/gateway/GuildMembersChunkData;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/gateway/GuildMembersChunkData;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildMembersChunk;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildMembersChunk;Ldev/jombi/kordsb/gateway/GuildMembersChunkData;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildMembersChunk;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/gateway/GuildMembersChunkData;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildMembersChunkData {
	public static final field Companion Ldev/jombi/kordsb/gateway/GuildMembersChunkData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/util/List;IILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/List;IILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/List;IILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()I
	public final fun component4 ()I
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/List;IILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/gateway/GuildMembersChunkData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildMembersChunkData;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/List;IILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildMembersChunkData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChunkCount ()I
	public final fun getChunkIndex ()I
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMembers ()Ljava/util/List;
	public final fun getNonce ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getNotFound ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getPresences ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/GuildMembersChunkData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/GuildMembersChunkData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/GuildMembersChunkData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/GuildMembersChunkData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/GuildMembersChunkData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/GuildMembersChunkData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/GuildRoleCreate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordGuildRole;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordGuildRole;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordGuildRole;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildRoleCreate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildRoleCreate;Ldev/jombi/kordsb/common/entity/DiscordGuildRole;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildRoleCreate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getRole ()Ldev/jombi/kordsb/common/entity/DiscordGuildRole;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildRoleDelete : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordDeletedGuildRole;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordDeletedGuildRole;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordDeletedGuildRole;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildRoleDelete;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildRoleDelete;Ldev/jombi/kordsb/common/entity/DiscordDeletedGuildRole;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildRoleDelete;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getRole ()Ldev/jombi/kordsb/common/entity/DiscordDeletedGuildRole;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildRoleUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordGuildRole;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordGuildRole;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordGuildRole;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildRoleUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildRoleUpdate;Ldev/jombi/kordsb/common/entity/DiscordGuildRole;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildRoleUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getRole ()Ldev/jombi/kordsb/common/entity/DiscordGuildRole;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildScheduledEventCreate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildScheduledEventCreate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildScheduledEventCreate;Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildScheduledEventCreate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEvent ()Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildScheduledEventDelete : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildScheduledEventDelete;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildScheduledEventDelete;Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildScheduledEventDelete;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEvent ()Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildScheduledEventUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildScheduledEventUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildScheduledEventUpdate;Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildScheduledEventUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEvent ()Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildScheduledEventUserAdd : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildScheduledEventUserAdd;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildScheduledEventUserAdd;Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildScheduledEventUserAdd;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata {
	public static final field Companion Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildScheduledEventId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/GuildScheduledEventUserRemove : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildScheduledEventUserRemove;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildScheduledEventUserRemove;Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildScheduledEventUserRemove;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/gateway/GuildScheduledEventUserMetadata;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/GuildUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordGuild;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordGuild;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordGuild;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/GuildUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/GuildUpdate;Ldev/jombi/kordsb/common/entity/DiscordGuild;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/GuildUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuild ()Ldev/jombi/kordsb/common/entity/DiscordGuild;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/Heartbeat : dev/jombi/kordsb/gateway/Event {
	public static final field Companion Ldev/jombi/kordsb/gateway/Heartbeat$Companion;
	public fun <init> (J)V
	public final fun component1 ()J
	public final fun copy (J)Ldev/jombi/kordsb/gateway/Heartbeat;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/Heartbeat;JILjava/lang/Object;)Ldev/jombi/kordsb/gateway/Heartbeat;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/Heartbeat$Companion : kotlinx/serialization/KSerializer {
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/Heartbeat;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/Heartbeat;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/HeartbeatACK : dev/jombi/kordsb/gateway/Event {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/HeartbeatACK;
}

public final class dev/jombi/kordsb/gateway/Hello : dev/jombi/kordsb/gateway/Event {
	public static final field Companion Ldev/jombi/kordsb/gateway/Hello$Companion;
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public final fun component1 ()I
	public final fun copy (I)Ldev/jombi/kordsb/gateway/Hello;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/Hello;IILjava/lang/Object;)Ldev/jombi/kordsb/gateway/Hello;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeartbeatInterval ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/Hello;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/Hello$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Hello$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/Hello;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/Hello;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/Hello$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/IdentifyProperties {
	public static final field Companion Ldev/jombi/kordsb/gateway/IdentifyProperties$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ldev/jombi/kordsb/gateway/IdentifyProperties;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/IdentifyProperties;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/IdentifyProperties;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBrowser ()Ljava/lang/String;
	public final fun getDevice ()Ljava/lang/String;
	public final fun getOs ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/IdentifyProperties;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/IdentifyProperties$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/IdentifyProperties$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/IdentifyProperties;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/IdentifyProperties;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/IdentifyProperties$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/jombi/kordsb/gateway/Intent {
	public static final field Companion Ldev/jombi/kordsb/gateway/Intent$Companion;
	public synthetic fun <init> (Ldev/jombi/kordsb/common/DiscordBitSet;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> ([JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCode ()Ldev/jombi/kordsb/common/DiscordBitSet;
}

public final class dev/jombi/kordsb/gateway/Intent$Companion {
	public final fun getValues ()Ljava/util/Set;
}

public final class dev/jombi/kordsb/gateway/Intent$DirectMessageTyping : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$DirectMessageTyping;
}

public final class dev/jombi/kordsb/gateway/Intent$DirectMessages : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$DirectMessages;
}

public final class dev/jombi/kordsb/gateway/Intent$DirectMessagesReactions : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$DirectMessagesReactions;
}

public final class dev/jombi/kordsb/gateway/Intent$GuildBans : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$GuildBans;
}

public final class dev/jombi/kordsb/gateway/Intent$GuildEmojis : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$GuildEmojis;
}

public final class dev/jombi/kordsb/gateway/Intent$GuildIntegrations : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$GuildIntegrations;
}

public final class dev/jombi/kordsb/gateway/Intent$GuildInvites : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$GuildInvites;
}

public final class dev/jombi/kordsb/gateway/Intent$GuildMembers : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$GuildMembers;
}

public final class dev/jombi/kordsb/gateway/Intent$GuildMessageReactions : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$GuildMessageReactions;
}

public final class dev/jombi/kordsb/gateway/Intent$GuildMessageTyping : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$GuildMessageTyping;
}

public final class dev/jombi/kordsb/gateway/Intent$GuildMessages : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$GuildMessages;
}

public final class dev/jombi/kordsb/gateway/Intent$GuildPresences : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$GuildPresences;
}

public final class dev/jombi/kordsb/gateway/Intent$GuildScheduledEvents : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$GuildScheduledEvents;
}

public final class dev/jombi/kordsb/gateway/Intent$GuildVoiceStates : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$GuildVoiceStates;
}

public final class dev/jombi/kordsb/gateway/Intent$GuildWebhooks : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$GuildWebhooks;
}

public final class dev/jombi/kordsb/gateway/Intent$Guilds : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$Guilds;
}

public final class dev/jombi/kordsb/gateway/Intent$MessageContent : dev/jombi/kordsb/gateway/Intent {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Intent$MessageContent;
}

public final class dev/jombi/kordsb/gateway/IntentKt {
	public static final fun Intents (Ljava/lang/Iterable;)Ldev/jombi/kordsb/gateway/Intents;
	public static final fun Intents (Ljava/lang/String;)Ldev/jombi/kordsb/gateway/Intents;
	public static final fun Intents (Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/gateway/Intents;
	public static final fun Intents ([Ldev/jombi/kordsb/gateway/Intent;)Ldev/jombi/kordsb/gateway/Intents;
	public static final fun Intents ([Ldev/jombi/kordsb/gateway/Intents;)Ldev/jombi/kordsb/gateway/Intents;
	public static synthetic fun Intents$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/Intents;
	public static final fun IntentsWithIterable (Ljava/lang/Iterable;)Ldev/jombi/kordsb/gateway/Intents;
}

public final class dev/jombi/kordsb/gateway/Intents {
	public static final field Companion Ldev/jombi/kordsb/gateway/Intents$Companion;
	public final fun component1 ()Ldev/jombi/kordsb/common/DiscordBitSet;
	public final fun contains (Ldev/jombi/kordsb/gateway/Intent;)Z
	public final fun contains (Ldev/jombi/kordsb/gateway/Intents;)Z
	public final fun copy (Ldev/jombi/kordsb/common/DiscordBitSet;)Ldev/jombi/kordsb/gateway/Intents;
	public final fun copy (Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/gateway/Intents;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/Intents;Ldev/jombi/kordsb/common/DiscordBitSet;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/Intents;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()Ldev/jombi/kordsb/common/DiscordBitSet;
	public final fun getValues ()Ljava/util/Set;
	public fun hashCode ()I
	public final fun minus (Ldev/jombi/kordsb/gateway/Intent;)Ldev/jombi/kordsb/gateway/Intents;
	public final fun minus (Ldev/jombi/kordsb/gateway/Intents;)Ldev/jombi/kordsb/gateway/Intents;
	public final fun plus (Ldev/jombi/kordsb/gateway/Intent;)Ldev/jombi/kordsb/gateway/Intents;
	public final fun plus (Ldev/jombi/kordsb/gateway/Intents;)Ldev/jombi/kordsb/gateway/Intents;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/Intents$Companion {
	public final fun getAll ()Ldev/jombi/kordsb/gateway/Intents;
	public final fun getNonPrivileged ()Ldev/jombi/kordsb/gateway/Intents;
	public final fun getNone ()Ldev/jombi/kordsb/gateway/Intents;
	public final fun getPrivileged ()Ldev/jombi/kordsb/gateway/Intents;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/Intents$IntentsBuilder {
	public fun <init> ()V
	public fun <init> (Ldev/jombi/kordsb/common/DiscordBitSet;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/DiscordBitSet;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun flags ()Ldev/jombi/kordsb/gateway/Intents;
	public final fun unaryMinus (Ldev/jombi/kordsb/gateway/Intent;)V
	public final fun unaryMinus (Ldev/jombi/kordsb/gateway/Intents;)V
	public final fun unaryPlus (Ldev/jombi/kordsb/gateway/Intent;)V
	public final fun unaryPlus (Ldev/jombi/kordsb/gateway/Intents;)V
}

public final class dev/jombi/kordsb/gateway/IntentsSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/IntentsSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/Intents;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/Intents;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class dev/jombi/kordsb/gateway/InteractionCreate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordInteraction;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordInteraction;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordInteraction;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/InteractionCreate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/InteractionCreate;Ldev/jombi/kordsb/common/entity/DiscordInteraction;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/InteractionCreate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getInteraction ()Ldev/jombi/kordsb/common/entity/DiscordInteraction;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/InvalidSession : dev/jombi/kordsb/gateway/Event {
	public static final field Companion Ldev/jombi/kordsb/gateway/InvalidSession$Companion;
	public fun <init> (Z)V
	public final fun component1 ()Z
	public final fun copy (Z)Ldev/jombi/kordsb/gateway/InvalidSession;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/InvalidSession;ZILjava/lang/Object;)Ldev/jombi/kordsb/gateway/InvalidSession;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getResumable ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/InvalidSession$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/InviteCreate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/gateway/DiscordCreatedInvite;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/gateway/DiscordCreatedInvite;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/gateway/DiscordCreatedInvite;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/InviteCreate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/InviteCreate;Ldev/jombi/kordsb/gateway/DiscordCreatedInvite;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/InviteCreate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getInvite ()Ldev/jombi/kordsb/gateway/DiscordCreatedInvite;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/InviteDelete : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/gateway/DiscordDeletedInvite;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/gateway/DiscordDeletedInvite;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/gateway/DiscordDeletedInvite;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/InviteDelete;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/InviteDelete;Ldev/jombi/kordsb/gateway/DiscordDeletedInvite;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/InviteDelete;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getInvite ()Ldev/jombi/kordsb/gateway/DiscordDeletedInvite;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/MessageCreate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordMessage;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordMessage;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordMessage;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/MessageCreate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/MessageCreate;Ldev/jombi/kordsb/common/entity/DiscordMessage;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/MessageCreate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMessage ()Ldev/jombi/kordsb/common/entity/DiscordMessage;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/MessageDelete : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DeletedMessage;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DeletedMessage;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DeletedMessage;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/MessageDelete;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/MessageDelete;Ldev/jombi/kordsb/common/entity/DeletedMessage;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/MessageDelete;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMessage ()Ldev/jombi/kordsb/common/entity/DeletedMessage;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/MessageDeleteBulk : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/BulkDeleteData;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/BulkDeleteData;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/BulkDeleteData;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/MessageDeleteBulk;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/MessageDeleteBulk;Ldev/jombi/kordsb/common/entity/BulkDeleteData;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/MessageDeleteBulk;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMessageBulk ()Ldev/jombi/kordsb/common/entity/BulkDeleteData;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/MessageReactionAdd : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/MessageReactionAddData;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/MessageReactionAddData;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/MessageReactionAddData;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/MessageReactionAdd;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/MessageReactionAdd;Ldev/jombi/kordsb/common/entity/MessageReactionAddData;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/MessageReactionAdd;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getReaction ()Ldev/jombi/kordsb/common/entity/MessageReactionAddData;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/MessageReactionRemove : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/MessageReactionRemoveData;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/MessageReactionRemoveData;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/MessageReactionRemoveData;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/MessageReactionRemove;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/MessageReactionRemove;Ldev/jombi/kordsb/common/entity/MessageReactionRemoveData;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/MessageReactionRemove;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getReaction ()Ldev/jombi/kordsb/common/entity/MessageReactionRemoveData;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/MessageReactionRemoveAll : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/AllRemovedMessageReactions;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/AllRemovedMessageReactions;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/AllRemovedMessageReactions;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/MessageReactionRemoveAll;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/MessageReactionRemoveAll;Ldev/jombi/kordsb/common/entity/AllRemovedMessageReactions;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/MessageReactionRemoveAll;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getReactions ()Ldev/jombi/kordsb/common/entity/AllRemovedMessageReactions;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/MessageReactionRemoveEmoji : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/gateway/DiscordRemovedEmoji;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/gateway/DiscordRemovedEmoji;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/gateway/DiscordRemovedEmoji;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/MessageReactionRemoveEmoji;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/MessageReactionRemoveEmoji;Ldev/jombi/kordsb/gateway/DiscordRemovedEmoji;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/MessageReactionRemoveEmoji;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getReaction ()Ldev/jombi/kordsb/gateway/DiscordRemovedEmoji;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/MessageUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordPartialMessage;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordPartialMessage;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordPartialMessage;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/MessageUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/MessageUpdate;Ldev/jombi/kordsb/common/entity/DiscordPartialMessage;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/MessageUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMessage ()Ldev/jombi/kordsb/common/entity/DiscordPartialMessage;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/OpCode : java/lang/Enum {
	public static final field Dispatch Ldev/jombi/kordsb/gateway/OpCode;
	public static final field Heartbeat Ldev/jombi/kordsb/gateway/OpCode;
	public static final field HeartbeatACK Ldev/jombi/kordsb/gateway/OpCode;
	public static final field Hello Ldev/jombi/kordsb/gateway/OpCode;
	public static final field Identify Ldev/jombi/kordsb/gateway/OpCode;
	public static final field InvalidSession Ldev/jombi/kordsb/gateway/OpCode;
	public static final field OpCodeSerializer Ldev/jombi/kordsb/gateway/OpCode$OpCodeSerializer;
	public static final field Reconnect Ldev/jombi/kordsb/gateway/OpCode;
	public static final field RequestGuildMembers Ldev/jombi/kordsb/gateway/OpCode;
	public static final field Resume Ldev/jombi/kordsb/gateway/OpCode;
	public static final field StatusUpdate Ldev/jombi/kordsb/gateway/OpCode;
	public static final field Unknown Ldev/jombi/kordsb/gateway/OpCode;
	public static final field VoiceStateUpdate Ldev/jombi/kordsb/gateway/OpCode;
	public final fun getCode ()I
	public static fun valueOf (Ljava/lang/String;)Ldev/jombi/kordsb/gateway/OpCode;
	public static fun values ()[Ldev/jombi/kordsb/gateway/OpCode;
}

public final class dev/jombi/kordsb/gateway/OpCode$OpCodeSerializer : kotlinx/serialization/KSerializer {
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/OpCode;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/OpCode;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/PresenceUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordPresenceUpdate;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordPresenceUpdate;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordPresenceUpdate;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/PresenceUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/PresenceUpdate;Ldev/jombi/kordsb/common/entity/DiscordPresenceUpdate;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/PresenceUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPresence ()Ldev/jombi/kordsb/common/entity/DiscordPresenceUpdate;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface annotation class dev/jombi/kordsb/gateway/PrivilegedIntent : java/lang/annotation/Annotation {
}

public final class dev/jombi/kordsb/gateway/Ready : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/gateway/ReadyData;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/gateway/ReadyData;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/gateway/ReadyData;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/Ready;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/Ready;Ldev/jombi/kordsb/gateway/ReadyData;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/Ready;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/gateway/ReadyData;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/ReadyData {
	public static final field Companion Ldev/jombi/kordsb/gateway/ReadyData$Companion;
	public synthetic fun <init> (IILdev/jombi/kordsb/common/entity/DiscordUser;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (ILdev/jombi/kordsb/common/entity/DiscordUser;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;)V
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/DiscordUser;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()I
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/DiscordUser;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component9 ()Ljava/util/List;
	public final fun copy (ILdev/jombi/kordsb/common/entity/DiscordUser;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;)Ldev/jombi/kordsb/gateway/ReadyData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/ReadyData;ILdev/jombi/kordsb/common/entity/DiscordUser;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/ReadyData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplication ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getGeoOrderedRtcRegions ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getGuildHashes ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getGuilds ()Ljava/util/List;
	public final fun getPrivateChannels ()Ljava/util/List;
	public final fun getSessionId ()Ljava/lang/String;
	public final fun getTraces ()Ljava/util/List;
	public final fun getUser ()Ldev/jombi/kordsb/common/entity/DiscordUser;
	public final fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/ReadyData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/ReadyData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/ReadyData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/ReadyData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/ReadyData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/ReadyData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/Reconnect : dev/jombi/kordsb/gateway/Event {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Reconnect;
}

public final class dev/jombi/kordsb/gateway/RequestGuildMembers : dev/jombi/kordsb/gateway/Command {
	public static final field Companion Ldev/jombi/kordsb/gateway/RequestGuildMembers$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/gateway/RequestGuildMembers;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/RequestGuildMembers;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/RequestGuildMembers;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getLimit ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getNonce ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getPresences ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getQuery ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getUserIds ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/RequestGuildMembers;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/RequestGuildMembers$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/RequestGuildMembers$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/RequestGuildMembers;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/RequestGuildMembers;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/RequestGuildMembers$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/RequestGuildMembers$Nonce {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/RequestGuildMembers$Nonce;
	public final fun new ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/Resumed : dev/jombi/kordsb/gateway/DispatchEvent {
	public static final field Companion Ldev/jombi/kordsb/gateway/Resumed$Companion;
	public synthetic fun <init> (ILjava/lang/Integer;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/Integer;)V
	public final fun component1 ()Ljava/lang/Integer;
	public final fun copy (Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/Resumed;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/Resumed;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/Resumed;
	public fun equals (Ljava/lang/Object;)Z
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/Resumed;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/Resumed$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/Resumed$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/Resumed;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/Resumed;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/Resumed$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/ThreadCreate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordChannel;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/ThreadCreate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/ThreadCreate;Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/ThreadCreate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannel ()Ldev/jombi/kordsb/common/entity/DiscordChannel;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/ThreadDelete : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordChannel;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/ThreadDelete;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/ThreadDelete;Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/ThreadDelete;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannel ()Ldev/jombi/kordsb/common/entity/DiscordChannel;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/ThreadListSync : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/gateway/DiscordThreadListSync;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/gateway/DiscordThreadListSync;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/gateway/DiscordThreadListSync;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/ThreadListSync;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/ThreadListSync;Ldev/jombi/kordsb/gateway/DiscordThreadListSync;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/ThreadListSync;
	public fun equals (Ljava/lang/Object;)Z
	public fun getSequence ()Ljava/lang/Integer;
	public final fun getSync ()Ldev/jombi/kordsb/gateway/DiscordThreadListSync;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/ThreadMemberUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordThreadMember;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordThreadMember;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordThreadMember;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/ThreadMemberUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/ThreadMemberUpdate;Ldev/jombi/kordsb/common/entity/DiscordThreadMember;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/ThreadMemberUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMember ()Ldev/jombi/kordsb/common/entity/DiscordThreadMember;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/ThreadMembersUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/gateway/DiscordThreadMembersUpdate;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/gateway/DiscordThreadMembersUpdate;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/gateway/DiscordThreadMembersUpdate;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/ThreadMembersUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/ThreadMembersUpdate;Ldev/jombi/kordsb/gateway/DiscordThreadMembersUpdate;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/ThreadMembersUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMembers ()Ldev/jombi/kordsb/gateway/DiscordThreadMembersUpdate;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/ThreadUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordChannel;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/ThreadUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/ThreadUpdate;Ldev/jombi/kordsb/common/entity/DiscordChannel;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/ThreadUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannel ()Ldev/jombi/kordsb/common/entity/DiscordChannel;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/Ticker : kotlinx/coroutines/CoroutineScope {
	public fun <init> ()V
	public fun <init> (Lkotlinx/coroutines/CoroutineDispatcher;)V
	public synthetic fun <init> (Lkotlinx/coroutines/CoroutineDispatcher;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun stop (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun tickAt (JLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/gateway/TypingStart : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordTyping;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordTyping;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordTyping;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/TypingStart;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/TypingStart;Ldev/jombi/kordsb/common/entity/DiscordTyping;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/TypingStart;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/common/entity/DiscordTyping;
	public fun getSequence ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/UpdateStatus : dev/jombi/kordsb/gateway/Command {
	public static final field Companion Ldev/jombi/kordsb/gateway/UpdateStatus$Companion;
	public synthetic fun <init> (ILkotlinx/datetime/Instant;Ljava/util/List;Ldev/jombi/kordsb/common/entity/PresenceStatus;ZLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Lkotlinx/datetime/Instant;Ljava/util/List;Ldev/jombi/kordsb/common/entity/PresenceStatus;Z)V
	public final fun component1 ()Lkotlinx/datetime/Instant;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/PresenceStatus;
	public final fun component4 ()Z
	public final fun copy (Lkotlinx/datetime/Instant;Ljava/util/List;Ldev/jombi/kordsb/common/entity/PresenceStatus;Z)Ldev/jombi/kordsb/gateway/UpdateStatus;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/UpdateStatus;Lkotlinx/datetime/Instant;Ljava/util/List;Ldev/jombi/kordsb/common/entity/PresenceStatus;ZILjava/lang/Object;)Ldev/jombi/kordsb/gateway/UpdateStatus;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActivities ()Ljava/util/List;
	public final fun getAfk ()Z
	public final fun getSince ()Lkotlinx/datetime/Instant;
	public final fun getStatus ()Ldev/jombi/kordsb/common/entity/PresenceStatus;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/UpdateStatus;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/UpdateStatus$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/UpdateStatus$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/UpdateStatus;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/UpdateStatus;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/UpdateStatus$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/UpdateVoiceStatus : dev/jombi/kordsb/gateway/Command {
	public static final field Companion Ldev/jombi/kordsb/gateway/UpdateVoiceStatus$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;ZZLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;ZZ)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;ZZ)Ldev/jombi/kordsb/gateway/UpdateVoiceStatus;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/UpdateVoiceStatus;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;ZZILjava/lang/Object;)Ldev/jombi/kordsb/gateway/UpdateVoiceStatus;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getSelfDeaf ()Z
	public final fun getSelfMute ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/gateway/UpdateVoiceStatus;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/gateway/UpdateVoiceStatus$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/gateway/UpdateVoiceStatus$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/gateway/UpdateVoiceStatus;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/gateway/UpdateVoiceStatus;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/UpdateVoiceStatus$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/gateway/UserUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordUser;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordUser;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordUser;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/UserUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/UserUpdate;Ldev/jombi/kordsb/common/entity/DiscordUser;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/UserUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public fun getSequence ()Ljava/lang/Integer;
	public final fun getUser ()Ldev/jombi/kordsb/common/entity/DiscordUser;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/VoiceServerUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordVoiceServerUpdateData;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordVoiceServerUpdateData;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordVoiceServerUpdateData;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/VoiceServerUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/VoiceServerUpdate;Ldev/jombi/kordsb/common/entity/DiscordVoiceServerUpdateData;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/VoiceServerUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public fun getSequence ()Ljava/lang/Integer;
	public final fun getVoiceServerUpdateData ()Ldev/jombi/kordsb/common/entity/DiscordVoiceServerUpdateData;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/VoiceStateUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordVoiceState;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordVoiceState;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordVoiceState;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/VoiceStateUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/VoiceStateUpdate;Ldev/jombi/kordsb/common/entity/DiscordVoiceState;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/VoiceStateUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public fun getSequence ()Ljava/lang/Integer;
	public final fun getVoiceState ()Ldev/jombi/kordsb/common/entity/DiscordVoiceState;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/WebhooksUpdate : dev/jombi/kordsb/gateway/DispatchEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordWebhooksUpdateData;Ljava/lang/Integer;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/DiscordWebhooksUpdateData;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/DiscordWebhooksUpdateData;Ljava/lang/Integer;)Ldev/jombi/kordsb/gateway/WebhooksUpdate;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/gateway/WebhooksUpdate;Ldev/jombi/kordsb/common/entity/DiscordWebhooksUpdateData;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/WebhooksUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public fun getSequence ()Ljava/lang/Integer;
	public final fun getWebhooksUpdateData ()Ldev/jombi/kordsb/common/entity/DiscordWebhooksUpdateData;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/gateway/builder/LoginBuilder {
	public fun <init> ()V
	public final fun getIntents ()Ldev/jombi/kordsb/gateway/Intents;
	public final fun getName ()Ljava/lang/String;
	public final fun getPresence ()Ldev/jombi/kordsb/gateway/DiscordPresence;
	public final fun intents (Lkotlin/jvm/functions/Function1;)V
	public final fun presence (Lkotlin/jvm/functions/Function1;)V
	public final fun setIntents (Ldev/jombi/kordsb/gateway/Intents;)V
	public final fun setName (Ljava/lang/String;)V
	public final fun setPresence (Ldev/jombi/kordsb/gateway/DiscordPresence;)V
}

public final class dev/jombi/kordsb/gateway/builder/PresenceBuilder {
	public fun <init> ()V
	public final fun competing (Ljava/lang/String;)V
	public final fun getAfk ()Z
	public final fun getSince ()Lkotlinx/datetime/Instant;
	public final fun getStatus ()Ldev/jombi/kordsb/common/entity/PresenceStatus;
	public final fun listening (Ljava/lang/String;)V
	public final fun playing (Ljava/lang/String;)V
	public final fun setAfk (Z)V
	public final fun setSince (Lkotlinx/datetime/Instant;)V
	public final fun setStatus (Ldev/jombi/kordsb/common/entity/PresenceStatus;)V
	public final fun streaming (Ljava/lang/String;Ljava/lang/String;)V
	public final fun toPresence ()Ldev/jombi/kordsb/gateway/DiscordPresence;
	public final fun toUpdateStatus ()Ldev/jombi/kordsb/gateway/UpdateStatus;
	public final fun watching (Ljava/lang/String;)V
}

public final class dev/jombi/kordsb/gateway/builder/RequestGuildMembersBuilder {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getLimit ()Ljava/lang/Integer;
	public final fun getNonce ()Ljava/lang/String;
	public final fun getPresences ()Ljava/lang/Boolean;
	public final fun getQuery ()Ljava/lang/String;
	public final fun getUserIds ()Ljava/util/Set;
	public final fun requestAllMembers ()V
	public final fun setGuildId (Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public final fun setLimit (Ljava/lang/Integer;)V
	public final fun setNonce (Ljava/lang/String;)V
	public final fun setPresences (Ljava/lang/Boolean;)V
	public final fun setQuery (Ljava/lang/String;)V
	public final fun setUserIds (Ljava/util/Set;)V
	public final fun toRequest ()Ldev/jombi/kordsb/gateway/RequestGuildMembers;
}

public final class dev/jombi/kordsb/gateway/retry/LinearRetry : dev/jombi/kordsb/gateway/retry/Retry {
	public synthetic fun <init> (JJILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getHasNext ()Z
	public fun reset ()V
	public fun retry (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/gateway/retry/Retry {
	public abstract fun getHasNext ()Z
	public abstract fun reset ()V
	public abstract fun retry (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

